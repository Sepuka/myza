// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/sepuka/myza/domain"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Cache is an autogenerated mock type for the Cache type
type Cache struct {
	mock.Mock
}

// Context provides a mock function with given fields:
func (_m *Cache) Context() context.Context {
	ret := _m.Called()

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// Get provides a mock function with given fields: ctx, key
func (_m *Cache) Get(ctx context.Context, key string) domain.CacheResponse {
	ret := _m.Called(ctx, key)

	var r0 domain.CacheResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) domain.CacheResponse); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CacheResponse)
		}
	}

	return r0
}

// Set provides a mock function with given fields: ctx, key, value, expiration
func (_m *Cache) Set(ctx context.Context, key string, value interface{}, expiration time.Duration) domain.CacheResponse {
	ret := _m.Called(ctx, key, value, expiration)

	var r0 domain.CacheResponse
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}, time.Duration) domain.CacheResponse); ok {
		r0 = rf(ctx, key, value, expiration)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CacheResponse)
		}
	}

	return r0
}
